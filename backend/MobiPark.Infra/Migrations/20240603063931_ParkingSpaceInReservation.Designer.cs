// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MobiPark.Infra;

#nullable disable

namespace MobiPark.Infra.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240603063931_ParkingSpaceInReservation")]
    partial class ParkingSpaceInReservation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("MobiPark.Domain.Models.ParkingSpace", b =>
                {
                    b.Property<int>("Number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Number");

                    b.ToTable("ParkingSpaces");
                });

            modelBuilder.Entity("MobiPark.Infra.Entities.ReservationEntity", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ParkingSpaceNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("VehicleId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ReservationId");

                    b.HasIndex("ParkingSpaceNumber");

                    b.HasIndex("VehicleId")
                        .IsUnique();

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("MobiPark.Infra.Entities.VehicleEntity", b =>
                {
                    b.Property<string>("Plate")
                        .HasColumnType("TEXT");

                    b.Property<int>("BatteryCapacity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CurrentBatteryCapacity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EngineType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Maker")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PlateType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VehicleType")
                        .HasColumnType("INTEGER");

                    b.HasKey("Plate");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("MobiPark.Infra.Entities.ReservationEntity", b =>
                {
                    b.HasOne("MobiPark.Domain.Models.ParkingSpace", "ParkingSpace")
                        .WithMany()
                        .HasForeignKey("ParkingSpaceNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MobiPark.Infra.Entities.VehicleEntity", "Vehicle")
                        .WithOne("Reservation")
                        .HasForeignKey("MobiPark.Infra.Entities.ReservationEntity", "VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ParkingSpace");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("MobiPark.Infra.Entities.VehicleEntity", b =>
                {
                    b.Navigation("Reservation")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
